$date
	Tue Oct 11 10:41:47 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module exercise3_tb $end
$var wire 16 ! D [0:15] $end
$var reg 4 " A [3:0] $end
$var reg 1 # En $end
$var integer 32 $ i [31:0] $end
$scope module test $end
$var wire 4 % A [3:0] $end
$var wire 1 # En $end
$var wire 4 & X [0:3] $end
$var wire 16 ' D [0:15] $end
$scope module d1 $end
$var wire 2 ( A [1:0] $end
$var wire 1 # En $end
$var reg 4 ) D [0:3] $end
$upscope $end
$scope module d2 $end
$var wire 2 * A [1:0] $end
$var wire 1 + En $end
$var reg 4 , D [0:3] $end
$upscope $end
$scope module d3 $end
$var wire 2 - A [1:0] $end
$var wire 1 . En $end
$var reg 4 / D [0:3] $end
$upscope $end
$scope module d4 $end
$var wire 2 0 A [1:0] $end
$var wire 1 1 En $end
$var reg 4 2 D [0:3] $end
$upscope $end
$scope module d5 $end
$var wire 2 3 A [1:0] $end
$var wire 1 4 En $end
$var reg 4 5 D [0:3] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1111 5
04
b0 3
b1111 2
01
b0 0
b1111 /
0.
b0 -
b1111 ,
0+
b0 *
b1111 )
b0 (
b1111111111111111 '
b1111 &
b0 %
b0 $
0#
b0 "
b1111111111111111 !
$end
#10
b1 *
b1 -
b1 0
b1 3
b1 "
b1 %
b1 $
#20
b10 *
b10 -
b10 0
b10 3
b10 "
b10 %
b10 $
#30
b11 *
b11 -
b11 0
b11 3
b11 "
b11 %
b11 $
#40
b1 (
b0 *
b0 -
b0 0
b0 3
b100 "
b100 %
b100 $
#50
b1 *
b1 -
b1 0
b1 3
b101 "
b101 %
b101 $
#60
b10 *
b10 -
b10 0
b10 3
b110 "
b110 %
b110 $
#70
b11 *
b11 -
b11 0
b11 3
b111 "
b111 %
b111 $
#80
b10 (
b0 *
b0 -
b0 0
b0 3
b1000 "
b1000 %
b1000 $
#90
b1 *
b1 -
b1 0
b1 3
b1001 "
b1001 %
b1001 $
#100
b10 *
b10 -
b10 0
b10 3
b1010 "
b1010 %
b1010 $
#110
b11 *
b11 -
b11 0
b11 3
b1011 "
b1011 %
b1011 $
#120
b11 (
b0 *
b0 -
b0 0
b0 3
b1100 "
b1100 %
b1100 $
#130
b1 *
b1 -
b1 0
b1 3
b1101 "
b1101 %
b1101 $
#140
b10 *
b10 -
b10 0
b10 3
b1110 "
b1110 %
b1110 $
#150
b11 *
b11 -
b11 0
b11 3
b1111 "
b1111 %
b1111 $
#160
b111 ,
1+
b111111111111111 !
b111111111111111 '
b1111 5
04
b0 (
b0 *
b0 -
b0 0
b0 3
b111 &
b111 )
b0 "
b0 %
1#
b0 $
#170
b1011111111111111 !
b1011111111111111 '
b1011 ,
b1 *
b1 -
b1 0
b1 3
b1 "
b1 %
b1 $
#180
b1101111111111111 !
b1101111111111111 '
b1101 ,
b10 *
b10 -
b10 0
b10 3
b10 "
b10 %
b10 $
#190
b1110111111111111 !
b1110111111111111 '
b1110 ,
b11 *
b11 -
b11 0
b11 3
b11 "
b11 %
b11 $
#200
b111 /
1.
0+
b1011 &
b1011 )
b1111011111111111 !
b1111011111111111 '
b1111 ,
b1 (
b0 *
b0 -
b0 0
b0 3
b100 "
b100 %
b100 $
#210
b1111101111111111 !
b1111101111111111 '
b1011 /
b1 *
b1 -
b1 0
b1 3
b101 "
b101 %
b101 $
#220
b1111110111111111 !
b1111110111111111 '
b1101 /
b10 *
b10 -
b10 0
b10 3
b110 "
b110 %
b110 $
#230
b1111111011111111 !
b1111111011111111 '
b1110 /
b11 *
b11 -
b11 0
b11 3
b111 "
b111 %
b111 $
#240
b111 2
11
0.
b1101 &
b1101 )
b1111111101111111 !
b1111111101111111 '
b1111 /
b10 (
b0 *
b0 -
b0 0
b0 3
b1000 "
b1000 %
b1000 $
#250
b1111111110111111 !
b1111111110111111 '
b1011 2
b1 *
b1 -
b1 0
b1 3
b1001 "
b1001 %
b1001 $
#260
b1111111111011111 !
b1111111111011111 '
b1101 2
b10 *
b10 -
b10 0
b10 3
b1010 "
b1010 %
b1010 $
#270
b1111111111101111 !
b1111111111101111 '
b1110 2
b11 *
b11 -
b11 0
b11 3
b1011 "
b1011 %
b1011 $
#280
b111 5
14
01
b1110 &
b1110 )
b1111111111110111 !
b1111111111110111 '
b1111 2
b11 (
b0 *
b0 -
b0 0
b0 3
b1100 "
b1100 %
b1100 $
#290
b1111111111111011 !
b1111111111111011 '
b1011 5
b1 *
b1 -
b1 0
b1 3
b1101 "
b1101 %
b1101 $
#300
b1111111111111101 !
b1111111111111101 '
b1101 5
b10 *
b10 -
b10 0
b10 3
b1110 "
b1110 %
b1110 $
#310
b1111111111111110 !
b1111111111111110 '
b1110 5
b11 *
b11 -
b11 0
b11 3
b1111 "
b1111 %
b1111 $
#320
b10000 $
